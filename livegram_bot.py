import os
import threading
from flask import Flask
from telegram import Update
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    ContextTypes, filters
)

BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

app = Flask(__name__)  # Flask –¥–ª—è –ø–æ—Ä—Ç—É

# ======= Telegram –ë–æ—Ç Handlers =======

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–±–æ —Ñ–∞–π–ª, —ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç—Ä–∏–º–∞—î –π–æ–≥–æ.")

async def forward_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    msg = f"üì© –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ @{user.username or user.first_name} (ID: {user.id}):\n\n{update.message.text}"
    await context.bot.send_message(chat_id=ADMIN_ID, text=msg)

async def forward_media(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    caption = update.message.caption or ""
    file_info = f"üìé –§–∞–π–ª –≤—ñ–¥ @{user.username or user.first_name} (ID: {user.id})"

    if update.message.photo:
        photo = update.message.photo[-1]
        await context.bot.send_photo(chat_id=ADMIN_ID, photo=photo.file_id, caption=caption or file_info)
    elif update.message.document:
        doc = update.message.document
        await context.bot.send_document(chat_id=ADMIN_ID, document=doc.file_id, caption=caption or file_info)
    elif update.message.video:
        video = update.message.video
        await context.bot.send_video(chat_id=ADMIN_ID, video=video.file_id, caption=caption or file_info)
    else:
        await context.bot.send_message(chat_id=ADMIN_ID, text=f"{file_info} (—Ç–∏–ø –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è)")

async def reply_to_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.chat_id != ADMIN_ID:
        return
    if context.args and len(context.args) >= 2:
        user_id = int(context.args[0])
        reply_text = ' '.join(context.args[1:])
        await context.bot.send_message(chat_id=user_id, text=f"üí¨ –í—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n{reply_text}")
    else:
        await update.message.reply_text("‚ùó –§–æ—Ä–º–∞—Ç: /reply <user_id> <–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è>")

# ======= –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ =======
def start_bot():
    app_telegram = ApplicationBuilder().token(BOT_TOKEN).build()

    app_telegram.add_handler(CommandHandler("start", start))
    app_telegram.add_handler(CommandHandler("reply", reply_to_user))
    app_telegram.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, forward_text))
    app_telegram.add_handler(MessageHandler(filters.PHOTO | filters.Document.ALL | filters.VIDEO, forward_media))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ (polling)...")
    app_telegram.run_polling()

# ======= Flask –º–∞—Ä—à—Ä—É—Ç, —â–æ–± Render –±–∞—á–∏–≤ –ø–æ—Ä—Ç =======
@app.route('/')
def home():
    return "Telegram bot is running!", 200

if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞ –≤ —ñ–Ω—à–æ–º—É –ø–æ—Ç–æ—Ü—ñ
    threading.Thread(target=start_bot).start()

    # Flask –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –Ω–∞ –ø–æ—Ä—Ç—É, —è–∫–∏–π —Ö–æ—á–µ Render
    port = int(os.environ.get("PORT", 10000))
    app.run(host='0.0.0.0', port=port)
